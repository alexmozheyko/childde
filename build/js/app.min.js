"use strict";

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var userImageEl = document.getElementById('userImage');
var dropdownMenuEl = document.getElementById('accountDropdown');
var scrollToTopBtn = document.getElementById('scrollToTop');
var shortDescEls = document.getElementsByClassName('question-card__content__short-desc');
var qTopDropdownEl;
var qBottomDropdownEl;

var _iterator = _createForOfIteratorHelper(shortDescEls),
    _step;

try {
  var _loop = function _loop() {
    var elem = _step.value;
    elem.addEventListener('click', function () {
      elem.nextElementSibling.style.display = 'block';
      elem.remove();
    });
  };

  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    _loop();
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}

function generateQTopDropdownEl(x, y) {
  var xPos = x - 195;
  var yPos = y + 55 + window.scrollY;
  return "\n        <div class=\"question-card__dropdown question-dropdown\" id=\"qTopDropdown\" style=\"transform: translate3d(".concat(xPos, "px, ").concat(yPos, "px, 0px)\">\n            <div class=\"question-dropdown-wrapper\">\n                <a class=\"question-dropdown__item\">\n                    <div class=\"question-dropdown__item__icon\"><img src=\"./assets/icons/share.svg\" /></div><span>Teilen</span>\n                </a>\n                <a class=\"question-dropdown__item\">\n                    <div class=\"question-dropdown__item__icon\"><img src=\"./assets/icons/paintbrush.svg\" /></div><span>Bearbeiten</span>\n                </a>\n                <a class=\"question-dropdown__item question-dropdown__item--with-toggle\" id=\"notifyTogglerOption\">\n                    <div class=\"question-dropdown__item__toggle-wrapper\">\n                        <div>\n                            <div class=\"question-dropdown__item__icon\"><img src=\"./assets/icons/bell.svg\" /></div><span>Mitteilungen</span>\n                        </div>\n                        <label class=\"question-dropdown__item__toggle item-toggle\"><input type=\"checkbox\"/><span class=\"item-toggle__slider\"></span></label></div>\n                    <div class=\"question-dropdown__item__hint\">\n                        (Sie erhalten Mitteilungen \xFCber neue Antworten und Kommentare)\n                    </div>\n                </a>\n            </div>\n        </div>\n    ");
}

function generateQBottomDropdownEl(x, y) {
  var xPos = x - 90;
  var yPos = y - 120 + window.scrollY;
  return "\n        <div class=\"question-card__dropdown question-dropdown question-dropdown--bottom\" id=\"qBottomDropdown\" style=\"transform: translate3d(".concat(xPos, "px, ").concat(yPos, "px, 0px)\">\n            <div class=\"question-dropdown-wrapper\">\n                <a class=\"question-dropdown__item\">\n                    <div class=\"question-dropdown__item__icon\"><img src=\"./assets/icons/share.svg\" /></div><span>Teilen</span>\n                </a>\n                <a class=\"question-dropdown__item\">\n                    <div class=\"question-dropdown__item__icon\"><img src=\"./assets/icons/warning.svg\" /></div><span>Melden</span>\n                </a>\n            </div>\n        </div>\n    ");
}

function toggleQuestionNotifications() {
  var notifyToggleEl = document.getElementById('notifyTogglerOption');

  var _notifyToggleEl$query = notifyToggleEl.querySelector('input'),
      checked = _notifyToggleEl$query.checked;

  notifyToggleEl.querySelector('input').checked = !checked;
}

window.addEventListener('click', function (event) {
  if (qTopDropdownEl && !qTopDropdownEl.contains(event.target)) {
    qTopDropdownEl.remove();
  }

  if (qBottomDropdownEl && !qBottomDropdownEl.contains(event.target)) {
    qBottomDropdownEl.remove();
  }

  dropdownMenuEl.style.display = 'none';

  if (userImageEl.contains(event.target) || dropdownMenuEl.contains(event.target)) {
    dropdownMenuEl.style.display = 'block';
  }

  if (event.target.classList.contains('question-header__dropdown-icon')) {
    var _event$target$getBoun = event.target.getBoundingClientRect(),
        x = _event$target$getBoun.x,
        y = _event$target$getBoun.y;

    document.body.insertAdjacentHTML('beforeend', generateQTopDropdownEl(x, y));
    qTopDropdownEl = document.getElementById('qTopDropdown');
    qTopDropdownEl.querySelector('#notifyTogglerOption').addEventListener('click', toggleQuestionNotifications);
  }

  if (event.target.classList.contains('question-reviews__horizontal-dropdown')) {
    var _event$target$getBoun2 = event.target.getBoundingClientRect(),
        _x = _event$target$getBoun2.x,
        _y = _event$target$getBoun2.y;

    document.body.insertAdjacentHTML('beforeend', generateQBottomDropdownEl(_x, _y));
    qBottomDropdownEl = document.getElementById('qBottomDropdown');
  }
});
scrollToTopBtn.addEventListener('click', function () {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,